name: C++ CI

on:
  push:
    branches:
      - main
      - new-ci-workflow-based-on-run-vcpkg
  pull_request:
    branches:
      - main

jobs:
  build_with_run_vcpkg:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: lukka/get-cmake@latest
      - name: Dump the content of $RUNNER_TEMP
        shell: bash
        run: find $RUNNER_TEMP
      
      - name: Dump the content of $RUNNER_WORKSPACE
        shell: bash
        run: find $RUNNER_WORKSPACE
      
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        id: runvcpkg
        with:
          # This specifies the location of vcpkg, where it is going to be restored from cache, or create from scratch.
          vcpkgDirectory: '${{ runner.workspace }}/_vcpkg_'
          # The Git commit id of vcpkg to be checked out. This is only needed because we are not using a submodule.
          vcpkgGitCommitId: '3508985146f1b1d248c67ead13f8f54be5b4f5da'
          # The vcpkg.json file, which will be part of cache key computation.
          vcpkgJsonGlob: '${{ runner.workspace }}/vcpkg.json'

      - name: Prints output of run-vcpkg's action
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}'"

      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ninja-multi-vcpkg
          buildPreset: ninja-multi-vcpkg
          
